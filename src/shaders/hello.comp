#version 430 core
layout (local_size_x = 1) in;

layout(std430, binding = 0) buffer InputBuffer {
    vec4 balls[];
};

layout(std430, binding = 1) buffer OutputBuffer {
    vec4 out_balls[];
};

uniform float delta_t;

void main() {
    uint index = gl_GlobalInvocationID.x;

    const int num_gravity_points = 3;
    vec2 gravity_points[num_gravity_points] = {vec2(-5.0, -5.0), vec2(-5.0, 5.0), vec2(5.0, 0.0)};

    vec2 acc = vec2(0.0);

    for(int i = 0; i < num_gravity_points; i++){
        vec2 dir = gravity_points[i] - balls[index].xy;
        acc += normalize(dir) / length(dir) / length(dir);
    }

    out_balls[index].zw = balls[index].zw + acc * delta_t;
    out_balls[index].xy = balls[index].xy + balls[index].zw * delta_t + acc * delta_t * delta_t / 2;
}